/* This is a page of lexical source */

1 ASSUME = /assume//
2 ASYNC = /async//
3 ATOMIC = /atomic//
4 AWAIT = /await//
5 BREAK = /break//
6 CLASS = /class//
7 CONST = /const//
8 CONTINUE = /continue//
9 ELSE = /else//
10 ENUM = /enum//
11 FOR = /for//
12 IF = /if//
13 INTERFACE = /interface//
14 MODULE = /module//
15 OPERATOR = /operator//
16 PUBLIC = /public//
17 PROTECTED = /protected//
18 PRIVATE = /private//
19 RETURN = /return//
20 STATIC = /static//
21 THIS = /this//
22 VAR = /var//
23 WHILE = /while//

24 ANY = /any//
25 VOID = /void//
26 INT8 = /int8//
27 INT16 = /int16//
28 INT32 = /int32//
29 INT64 = /int64//
30 UINT8 = /uint8//
31 UINT16 = /uint16//
32 UINT32 = /uint32//
33 UINT64 = /uint64//
34 BOOL = /bool//
35 FLOAT32 = /float32//
36 FLOAT64 = /float64//

37 OP:PLUS = /\+//
38 OP:MINUS = /-//
39 OP:MUL = /\*//
40 OP:DIV = /\///
41 OP:MOL = /%//
42 OP:SHL = /<<//
43 OP:SHR = />>//
44 OP:BITAND = /&//
45 OP:BITOR = /\|//
46 OP:BITXOR = /^//
47 OP:ASSIGN = /=//
48 OP:A:PLUS = /\+=//
49 OP:A:MINUS = /-=//
50 OP:A:MUL = /\*=//
51 OP:A:DIV = /\/=//
52 OP:A:MOL = /%=//
53 OP:A:SHL = /<<=//
54 OP:A:SHR = />>=//
55 OP:A:BITAND = /&=//
56 OP:A:BITOR = /\|=//
57 OP:A:BITXOR = /^=//
58 OP:LT = /<//
59 OP:GT = />//
60 OP:LE = /<=//
61 OP:GE = />=//
62 OP:EQ = /==//
63 OP:NE = /!=//
64 OP:INC = /\+\+//
65 OP:DEC = /--//
66 OP:MEMBER = /\.//
67 OP:META = /\.!//
68 OP:COLON = /://
69 OP:COMMA = /,//
70 OP:ETC = /\.\.\.//
71 OP:AT = /@//
72 OP:QM = /\?//
73 OP:EM = /!//
74 OP:OPEN:E = /\(//
75 OP:OPEN:B = /{//
76 OP:OPEN:I = /\[//
77 OP:CLOSE:E = /\)//
78 OP:CLOSE:B = /}//
79 OP:CLOSE:I = /\]//
80 OP:AND = /and//
81 OP:AS = /as//
82 OP:DELETE = /delete//
83 OP:NEW = /new//
84 OP:NOT = /not//
85 OP:OR = /or//

99 SPACE = /\s+//
100 COMMENT:BLOCK = /\/\*.*\*\///
101 COMMENT:LINE = /\/\/[^\n]*\n//
102 L:LABEL = /(\l|\u|_|$)(\l|\u|\d|_|$)+//
103 L:I:H = /0(x|X)[0-9a-fA-F]+/\l|\u|_|$/
104 L:I:B = /0(b|B)[01]+/\l|\u|_|$/
105 L:I:O = /0[0-7]+/\l|\u|_$/
106 L:I:N = /0|([1-9]\d*)/\l|\u|_|$/