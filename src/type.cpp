#ifndef __type_cpp__
#define __type_cpp__

#include "type.hpp"

namespace alioth {

const std::map<std::tuple<typeid_t,typeid_t>,int> basic_type_convert_table = {

    {{BooleanType,BooleanType}, 1 },
    {{BooleanType,Uint8Type}, 3 },
    {{BooleanType,Uint16Type}, 3 },
    {{BooleanType,Uint32Type}, 3 },
    {{BooleanType,Uint64Type}, 3 },
    {{BooleanType,Int8Type}, 3 },
    {{BooleanType,Int16Type}, 3 },
    {{BooleanType,Int32Type}, 3 },
    {{BooleanType,Int64Type}, 3 },
    {{BooleanType,Float32Type}, 3 },
    {{BooleanType,Float64Type}, 3 },

    {{Uint8Type,BooleanType}, 2 },
    {{Uint8Type,Uint8Type}, 1 },
    {{Uint8Type,Uint16Type}, 3 },
    {{Uint8Type,Uint32Type}, 3 },
    {{Uint8Type,Uint64Type}, 3 },
    {{Uint8Type,Int8Type}, 3 },
    {{Uint8Type,Int16Type}, 3 },
    {{Uint8Type,Int32Type}, 3 },
    {{Uint8Type,Int64Type}, 3 },
    {{Uint8Type,Float32Type}, 3 },
    {{Uint8Type,Float64Type}, 3 },

    {{Uint16Type,BooleanType}, 2 },
    {{Uint16Type,Uint8Type}, 2 },
    {{Uint16Type,Uint16Type}, 1 },
    {{Uint16Type,Uint32Type}, 3 },
    {{Uint16Type,Uint64Type}, 3 },
    {{Uint16Type,Int8Type}, 2 },
    {{Uint16Type,Int16Type}, 3 },
    {{Uint16Type,Int32Type}, 3 },
    {{Uint16Type,Int64Type}, 3 },
    {{Uint16Type,Float32Type}, 3 },
    {{Uint16Type,Float64Type}, 3 },

    {{Uint32Type,BooleanType}, 2 },
    {{Uint32Type,Uint8Type}, 2 },
    {{Uint32Type,Uint16Type}, 2 },
    {{Uint32Type,Uint32Type}, 1 },
    {{Uint32Type,Uint64Type}, 3 },
    {{Uint32Type,Int8Type}, 2 },
    {{Uint32Type,Int16Type}, 2 },
    {{Uint32Type,Int32Type}, 3 },
    {{Uint32Type,Int64Type}, 3 },
    {{Uint32Type,Float32Type}, 3 },
    {{Uint32Type,Float64Type}, 3 },

    {{Uint64Type,BooleanType}, 2 },
    {{Uint64Type,Uint8Type}, 2 },
    {{Uint64Type,Uint16Type}, 2 },
    {{Uint64Type,Uint32Type}, 2 },
    {{Uint64Type,Uint64Type}, 1 },
    {{Uint64Type,Int8Type}, 2 },
    {{Uint64Type,Int16Type}, 2 },
    {{Uint64Type,Int32Type}, 2 },
    {{Uint64Type,Int64Type}, 3 },
    {{Uint64Type,Float32Type}, 3 },
    {{Uint64Type,Float64Type}, 3 },

    {{Int8Type,BooleanType}, 2 },
    {{Int8Type,Uint8Type}, 3 },
    {{Int8Type,Uint16Type}, 3 },
    {{Int8Type,Uint32Type}, 3 },
    {{Int8Type,Uint64Type}, 3 },
    {{Int8Type,Int8Type}, 1 },
    {{Int8Type,Int16Type}, 3 },
    {{Int8Type,Int32Type}, 3 },
    {{Int8Type,Int64Type}, 3 },
    {{Int8Type,Float32Type}, 3 },
    {{Int8Type,Float64Type}, 3 },

    {{Int16Type,BooleanType}, 2 },
    {{Int16Type,Uint8Type}, 2 },
    {{Int16Type,Uint16Type}, 3 },
    {{Int16Type,Uint32Type}, 3 },
    {{Int16Type,Uint64Type}, 3 },
    {{Int16Type,Int8Type}, 2 },
    {{Int16Type,Int16Type}, 1 },
    {{Int16Type,Int32Type}, 3 },
    {{Int16Type,Int64Type}, 3 },
    {{Int16Type,Float32Type}, 3 },
    {{Int16Type,Float64Type}, 3 },

    {{Uint32Type,BooleanType}, 2 },
    {{Uint32Type,Uint8Type}, 2 },
    {{Uint32Type,Uint16Type}, 2 },
    {{Uint32Type,Uint32Type}, 3 },
    {{Uint32Type,Uint64Type}, 3 },
    {{Uint32Type,Int8Type}, 2 },
    {{Uint32Type,Int16Type}, 2 },
    {{Uint32Type,Int32Type}, 1 },
    {{Uint32Type,Int64Type}, 3 },
    {{Uint32Type,Float32Type}, 3 },
    {{Uint32Type,Float64Type}, 3 },

    {{Int64Type,BooleanType}, 2 },
    {{Int64Type,Uint8Type}, 2 },
    {{Int64Type,Uint16Type}, 2 },
    {{Int64Type,Uint32Type}, 2 },
    {{Int64Type,Uint64Type}, 3 },
    {{Int64Type,Int8Type}, 2 },
    {{Int64Type,Int16Type}, 2 },
    {{Int64Type,Int32Type}, 2 },
    {{Int64Type,Int64Type}, 1 },
    {{Int64Type,Float32Type}, 3 },
    {{Int64Type,Float64Type}, 3 },

    {{Float32Type,BooleanType}, 2 },
    {{Float32Type,Uint8Type}, 2 },
    {{Float32Type,Uint16Type}, 2 },
    {{Float32Type,Uint32Type}, 2 },
    {{Float32Type,Uint64Type}, 3 },
    {{Float32Type,Int8Type}, 2 },
    {{Float32Type,Int16Type}, 2 },
    {{Float32Type,Int32Type}, 2 },
    {{Float32Type,Int64Type}, 3 },
    {{Float32Type,Float32Type}, 1 },
    {{Float32Type,Float64Type}, 3 },

    {{Float64Type,BooleanType}, 2 },
    {{Float64Type,Uint8Type}, 2 },
    {{Float64Type,Uint16Type}, 2 },
    {{Float64Type,Uint32Type}, 2 },
    {{Float64Type,Uint64Type}, 2 },
    {{Float64Type,Int8Type}, 2 },
    {{Float64Type,Int16Type}, 2 },
    {{Float64Type,Int32Type}, 2 },
    {{Float64Type,Int64Type}, 3 },
    {{Float64Type,Float32Type}, 2 },
    {{Float64Type,Float64Type}, 3 },
};

}

#endif